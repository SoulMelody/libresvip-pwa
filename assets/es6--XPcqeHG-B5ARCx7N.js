const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/downloader-DcCTL3Wz-CBwJhVPM.js","assets/index-DcYuNHN-.js","assets/sandbox-ChAzL-i--BkLQRkK9.js","assets/memory-B3L1Fctl-BqEXojB0.js"])))=>i.map(i=>d[i]);
import{i as b}from"./index-DcYuNHN-.js";let J,N,H,Q=(async()=>{const k=globalThis.showDirectoryPicker;async function L(i={}){if(k&&!i._preferPolyfill)return k(i);const e=document.createElement("input");e.type="file",e.webkitdirectory=!0,e.multiple=!0,e.style.position="fixed",e.style.top="-100000px",e.style.left="-100000px",document.body.appendChild(e);const t=Promise.resolve().then(()=>j);return await new Promise(a=>{e.addEventListener("change",a),e.click()}),t.then(a=>a.getDirHandlesFromInput(e))}const W={accepts:[]},x=globalThis.showOpenFilePicker;async function R(i={}){const e={...W,...i};if(x&&!i._preferPolyfill)return x(e);const t=document.createElement("input");t.type="file",t.multiple=e.multiple,t.accept=(e.accepts||[]).map(n=>[...(n.extensions||[]).map(s=>"."+s),...n.mimeTypes||[]]).flat().join(","),Object.assign(t.style,{position:"fixed",top:"-100000px",left:"-100000px"}),document.body.appendChild(t);const a=Promise.resolve().then(()=>j);return await new Promise(n=>{t.addEventListener("change",n,{once:!0}),t.click()}),t.remove(),a.then(n=>n.getFileHandlesFromInput(t))}const I=globalThis.showSaveFilePicker;async function q(i={}){if(I&&!i._preferPolyfill)return I(i);i._name&&(console.warn("deprecated _name, spec now have `suggestedName`"),i.suggestedName=i._name);const{FileSystemFileHandle:e}=await Promise.resolve().then(()=>p),{FileHandle:t}=await b(async()=>{const{FileHandle:a}=await import("./downloader-DcCTL3Wz-CBwJhVPM.js");return{FileHandle:a}},__vite__mapDeps([0,1]));return new e(new t(i.suggestedName))}globalThis.DataTransferItem&&!DataTransferItem.prototype.getAsFileSystemHandle&&(DataTransferItem.prototype.getAsFileSystemHandle=async function(){const i=this.webkitGetAsEntry(),[{FileHandle:e,FolderHandle:t},{FileSystemDirectoryHandle:a},{FileSystemFileHandle:n}]=await Promise.all([b(()=>import("./sandbox-ChAzL-i--BkLQRkK9.js"),__vite__mapDeps([2,1])),Promise.resolve().then(()=>T),Promise.resolve().then(()=>p)]);return i.isFile?new n(new e(i,!1)):new a(new t(i,!1))});async function z(i,e={}){if(!i)return globalThis.navigator?.storage?.getDirectory()||globalThis.getOriginPrivateDirectory();const{FileSystemDirectoryHandle:t}=await Promise.resolve().then(()=>T),a=await i,n=await(a.default?a.default(e):a(e));return new t(n)}let A;N={WritableStream:globalThis.WritableStream,TransformStream:globalThis.TransformStream,DOMException:globalThis.DOMException,Blob:globalThis.Blob,File:globalThis.File},{WritableStream:A}=N;class y extends A{#e;constructor(e){super(e),this.#e=e,Object.setPrototypeOf(this,y.prototype),this._closed=!1}async close(){this._closed=!0;const e=this.getWriter(),t=e.close();return e.releaseLock(),t}seek(e){return this.write({type:"seek",position:e})}truncate(e){return this.write({type:"truncate",size:e})}write(e){if(this._closed)return Promise.reject(new TypeError("Cannot write to a CLOSED writable stream"));const t=this.getWriter(),a=t.write(e);return t.releaseLock(),a}}Object.defineProperty(y.prototype,Symbol.toStringTag,{value:"FileSystemWritableFileStream",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(y.prototype,{close:{enumerable:!0},seek:{enumerable:!0},truncate:{enumerable:!0},write:{enumerable:!0}}),globalThis.FileSystemFileHandle&&!globalThis.FileSystemFileHandle.prototype.createWritable&&!globalThis.FileSystemWritableFileStream&&(globalThis.FileSystemWritableFileStream=y);const u=Symbol("adapter");class v{[u];name;kind;constructor(e){this.kind=e.kind,this.name=e.name,this[u]=e}async queryPermission(e={}){const{mode:t="read"}=e,a=this[u];if(a.queryPermission)return a.queryPermission({mode:t});if(t==="read")return"granted";if(t==="readwrite")return a.writable?"granted":"denied";throw new TypeError(`Mode ${t} must be 'read' or 'readwrite'`)}async requestPermission({mode:e="read"}={}){const t=this[u];if(t.requestPermission)return t.requestPermission({mode:e});if(e==="read")return"granted";if(e==="readwrite")return t.writable?"granted":"denied";throw new TypeError(`Mode ${e} must be 'read' or 'readwrite'`)}async remove(e={}){await this[u].remove(e)}async isSameEntry(e){return this===e?!0:!e||typeof e!="object"||this.kind!==e.kind||!e[u]?!1:this[u].isSameEntry(e[u])}}Object.defineProperty(v.prototype,Symbol.toStringTag,{value:"FileSystemHandle",writable:!1,enumerable:!1,configurable:!0}),globalThis.FileSystemHandle&&(globalThis.FileSystemHandle.prototype.queryPermission??=function(i){return"granted"});let M;H={INVALID:["seeking position failed.","InvalidStateError"],GONE:["A requested file or directory could not be found at the time an operation was processed.","NotFoundError"],MISMATCH:["The path supplied exists, but was not an entry of requested type.","TypeMismatchError"],MOD_ERR:["The object can not be modified in this way.","InvalidModificationError"],SYNTAX:i=>[`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${i}`,"SyntaxError"],SECURITY:["It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.","SecurityError"],DISALLOWED:["The request is not allowed by the user agent or the platform in the current context.","NotAllowedError"]},M={writable:globalThis.WritableStream};async function U(i){console.warn("deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead");const[e,t,a]=await Promise.all([b(()=>import("./memory-B3L1Fctl-BqEXojB0.js"),__vite__mapDeps([3,1])),b(()=>import("./sandbox-ChAzL-i--BkLQRkK9.js"),__vite__mapDeps([2,1])),Promise.resolve().then(()=>T)]),n=new e.FolderHandle("",!1);return n._entries=i.map(s=>s.isFile?new t.FileHandle(s,!1):new t.FolderHandle(s,!1)),new a.FileSystemDirectoryHandle(n)}async function V(i){const{FolderHandle:e,FileHandle:t}=await b(()=>import("./memory-B3L1Fctl-BqEXojB0.js"),__vite__mapDeps([3,1])),{FileSystemDirectoryHandle:a}=await Promise.resolve().then(()=>T),n=Array.from(i.files),s=n[0].webkitRelativePath.split("/",1)[0],l=new e(s,!1);return n.forEach(d=>{const o=d.webkitRelativePath.split("/");o.shift();const c=o.pop(),f=o.reduce((w,h)=>(w._entries[h]||(w._entries[h]=new e(h,!1)),w._entries[h]),l);f._entries[c]=new t(d.name,d,!1)}),new a(l)}async function B(i){const{FileHandle:e}=await b(()=>import("./memory-B3L1Fctl-BqEXojB0.js"),__vite__mapDeps([3,1])),{FileSystemFileHandle:t}=await Promise.resolve().then(()=>p);return Array.from(i.files).map(a=>new t(new e(a.name,a,!1)))}const j=Object.freeze(Object.defineProperty({__proto__:null,config:M,errors:H,fromDataTransfer:U,getDirHandlesFromInput:V,getFileHandlesFromInput:B},Symbol.toStringTag,{value:"Module"})),{GONE:C,MOD_ERR:G}=H,m=Symbol("adapter");let g=class P extends v{[m];constructor(e){super(e),this[m]=e}async getDirectoryHandle(e,t={}){if(e==="")throw new TypeError("Name can't be an empty string.");if(e==="."||e===".."||e.includes("/"))throw new TypeError("Name contains invalid characters.");t.create=!!t.create;const a=await this[m].getDirectoryHandle(e,t);return new P(a)}async*entries(){const{FileSystemFileHandle:e}=await Promise.resolve().then(()=>p);for await(const[t,a]of this[m].entries())yield[a.name,a.kind==="file"?new e(a):new P(a)]}async*getEntries(){const{FileSystemFileHandle:e}=await Promise.resolve().then(()=>p);console.warn("deprecated, use .entries() instead");for await(let t of this[m].entries())yield t.kind==="file"?new e(t):new P(t)}async getFileHandle(e,t={}){const{FileSystemFileHandle:a}=await Promise.resolve().then(()=>p);if(e==="")throw new TypeError("Name can't be an empty string.");if(e==="."||e===".."||e.includes("/"))throw new TypeError("Name contains invalid characters.");t.create=!!t.create;const n=await this[m].getFileHandle(e,t);return new a(n)}async removeEntry(e,t={}){if(e==="")throw new TypeError("Name can't be an empty string.");if(e==="."||e===".."||e.includes("/"))throw new TypeError("Name contains invalid characters.");return t.recursive=!!t.recursive,this[m].removeEntry(e,t)}async resolve(e){if(await e.isSameEntry(this))return[];const t=[{handle:this,path:[]}];for(;t.length;){let{handle:a,path:n}=t.pop();for await(const s of a.values()){if(await s.isSameEntry(e))return[...n,s.name];s.kind==="directory"&&t.push({handle:s,path:[...n,s.name]})}}return null}async*keys(){for await(const[e]of this[m].entries())yield e}async*values(){for await(const[e,t]of this)yield t}[Symbol.asyncIterator](){return this.entries()}};if(Object.defineProperty(g.prototype,Symbol.toStringTag,{value:"FileSystemDirectoryHandle",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(g.prototype,{getDirectoryHandle:{enumerable:!0},entries:{enumerable:!0},getFileHandle:{enumerable:!0},removeEntry:{enumerable:!0}}),globalThis.FileSystemDirectoryHandle){const i=globalThis.FileSystemDirectoryHandle.prototype;i.resolve=async function(n){if(await n.isSameEntry(this))return[];const s=[{handle:this,path:[]}];for(;s.length;){let{handle:l,path:d}=s.pop();for await(const o of l.values()){if(await o.isSameEntry(n))return[...d,o.name];o.kind==="directory"&&s.push({handle:o,path:[...d,o.name]})}}return null};async function e(n){if(await(await navigator.storage.getDirectory()).resolve(n)===null)throw new DOMException(...C)}const t=i.entries;i.entries=async function*(){await e(this),yield*t.call(this)},i[Symbol.asyncIterator]=async function*(){yield*this.entries()};const a=i.removeEntry;i.removeEntry=async function(n,s={}){return a.call(this,n,s).catch(async l=>{throw l instanceof DOMException&&l.name==="UnknownError"&&!s.recursive&&!(await t.call(this).next()).done?new DOMException(...G):l})}}const T=Object.freeze(Object.defineProperty({__proto__:null,FileSystemDirectoryHandle:g,default:g},Symbol.toStringTag,{value:"Module"})),{INVALID:$,SYNTAX:D,GONE:Y}=H,_=Symbol("adapter");class F extends v{[_];constructor(e){super(e),this[_]=e}async createWritable(e={}){return new y(await this[_].createWritable(e))}async getFile(){return this[_].getFile()}}if(Object.defineProperty(F.prototype,Symbol.toStringTag,{value:"FileSystemFileHandle",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(F.prototype,{createWritable:{enumerable:!0},getFile:{enumerable:!0}}),globalThis.FileSystemFileHandle&&!globalThis.FileSystemFileHandle.prototype.createWritable){const i=new WeakMap;let e;const t=()=>{let n,s;onmessage=async l=>{const d=l.ports[0],o=l.data;switch(o.type){case"open":const c=o.name;let f=await navigator.storage.getDirectory();for(const w of o.path)f=await f.getDirectoryHandle(w);n=await f.getFileHandle(c),s=await n.createSyncAccessHandle();break;case"write":s.write(o.data,{at:o.position}),s.flush();break;case"truncate":s.truncate(o.size);break;case"abort":case"close":s.close();break}d.postMessage(0)}};globalThis.FileSystemFileHandle.prototype.createWritable=async function(n){if(!e){const r=`(${t.toString()})()`,S=new Blob([r],{type:"text/javascript"});e=URL.createObjectURL(S)}const s=new Worker(e,{type:"module"});let l=0;const d=new TextEncoder;let o=await this.getFile().then(r=>r.size);const c=r=>new Promise((S,X)=>{const E=new MessageChannel;E.port1.onmessage=O=>{O.data instanceof Error?X(O.data):S(O.data),E.port1.close(),E.port2.close(),E.port1.onmessage=null},s.postMessage(r,[E.port2])}),f=await navigator.storage.getDirectory(),w=await i.get(this),h=await f.resolve(w);if(h===null)throw new DOMException(...Y);return await c({type:"open",path:h,name:this.name}),n?.keepExistingData===!1&&(await c({type:"truncate",size:0}),o=0),new y({start:r=>{},async write(r){if(r?.constructor===Object?r={...r}:r={type:"write",data:r,position:l},r.type==="write"){if(!("data"in r))throw await c({type:"close"}),new DOMException(...D("write requires a data argument"));if(r.position??=l,typeof r.data=="string")r.data=d.encode(r.data);else if(r.data instanceof ArrayBuffer)r.data=new Uint8Array(r.data);else if(!(r.data instanceof Uint8Array)&&ArrayBuffer.isView(r.data))r.data=new Uint8Array(r.data.buffer,r.data.byteOffset,r.data.byteLength);else if(!(r.data instanceof Uint8Array)){const S=await new Response(r.data).arrayBuffer();r.data=new Uint8Array(S)}Number.isInteger(r.position)&&r.position>=0&&(l=r.position),l+=r.data.byteLength,o+=r.data.byteLength}else if(r.type==="seek")if(Number.isInteger(r.position)&&r.position>=0){if(o<r.position)throw new DOMException(...$);console.log("seeking",r),l=r.position;return}else throw await c({type:"close"}),new DOMException(...D("seek requires a position argument"));else if(r.type==="truncate")if(Number.isInteger(r.size)&&r.size>=0)o=r.size,l>o&&(l=o);else throw await c({type:"close"}),new DOMException(...D("truncate requires a size argument"));await c(r)},async close(){await c({type:"close"}),s.terminate()},async abort(r){await c({type:"abort",reason:r}),s.terminate()}})};const a=FileSystemDirectoryHandle.prototype.getFileHandle;FileSystemDirectoryHandle.prototype.getFileHandle=async function(...n){const s=await a.call(this,...n);return i.set(s,this),s}}let p;p=Object.freeze(Object.defineProperty({__proto__:null,FileSystemFileHandle:F,default:F},Symbol.toStringTag,{value:"Module"})),J=Object.freeze(Object.defineProperty({__proto__:null,FileSystemDirectoryHandle:g,FileSystemFileHandle:F,FileSystemHandle:v,FileSystemWritableFileStream:y,getOriginPrivateDirectory:z,showDirectoryPicker:L,showOpenFilePicker:R,showSaveFilePicker:q},Symbol.toStringTag,{value:"Module"}))})();export{Q as __tla,J as a,N as c,H as e};
